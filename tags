!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	0	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
2.1.0	HISTORY.md	/^# 2.1.0$/;"	h	language:markdown
2.0.0	HISTORY.md	/^# 2.0.0$/;"	h	language:markdown
1.2.0	HISTORY.md	/^# 1.2.0$/;"	h	language:markdown
1.1.0	HISTORY.md	/^# 1.1.0$/;"	h	language:markdown
1.0.2	HISTORY.md	/^# 1.0.2$/;"	h	language:markdown
1.0.1	HISTORY.md	/^# 1.0.1$/;"	h	language:markdown
1.0.0	HISTORY.md	/^# 1.0.0$/;"	h	language:markdown
0.26.1	HISTORY.md	/^# 0.26.1$/;"	h	language:markdown
0.26.0	HISTORY.md	/^# 0.26.0$/;"	h	language:markdown
0.25.2	HISTORY.md	/^# 0.25.2$/;"	h	language:markdown
0.25.1	HISTORY.md	/^# 0.25.1$/;"	h	language:markdown
0.25.0	HISTORY.md	/^# 0.25.0$/;"	h	language:markdown
0.24.3	HISTORY.md	/^# 0.24.3$/;"	h	language:markdown
0.24.2	HISTORY.md	/^# 0.24.2$/;"	h	language:markdown
0.24.1	HISTORY.md	/^# 0.24.1$/;"	h	language:markdown
0.24	HISTORY.md	/^# 0.24$/;"	h	language:markdown
0.23.2	HISTORY.md	/^# 0.23.2$/;"	h	language:markdown
0.23.1	HISTORY.md	/^# 0.23.1$/;"	h	language:markdown
0.23.0	HISTORY.md	/^# 0.23.0$/;"	h	language:markdown
0.22.1	HISTORY.md	/^# 0.22.1$/;"	h	language:markdown
0.22.0	HISTORY.md	/^# 0.22.0$/;"	h	language:markdown
0.21.1	HISTORY.md	/^# 0.21.1$/;"	h	language:markdown
0.21.0	HISTORY.md	/^# 0.21.0$/;"	h	language:markdown
0.20.0	HISTORY.md	/^# 0.20.0$/;"	h	language:markdown
0.19.2	HISTORY.md	/^# 0.19.2$/;"	h	language:markdown
0.19.1	HISTORY.md	/^# 0.19.1$/;"	h	language:markdown
0.19.0	HISTORY.md	/^# 0.19.0$/;"	h	language:markdown
0.18.0	HISTORY.md	/^# 0.18.0$/;"	h	language:markdown
0.17.1	HISTORY.md	/^# 0.17.1$/;"	h	language:markdown
0.17.0	HISTORY.md	/^# 0.17.0$/;"	h	language:markdown
0.16.0	HISTORY.md	/^# 0.16.0$/;"	h	language:markdown
0.15.0	HISTORY.md	/^# 0.15.0$/;"	h	language:markdown
0.14.4	HISTORY.md	/^# 0.14.4$/;"	h	language:markdown
0.14.3	HISTORY.md	/^# 0.14.3$/;"	h	language:markdown
0.14.2	HISTORY.md	/^# 0.14.2$/;"	h	language:markdown
0.14.1	HISTORY.md	/^# 0.14.1$/;"	h	language:markdown
0.14.0	HISTORY.md	/^# 0.14.0$/;"	h	language:markdown
0.13.1	HISTORY.md	/^# 0.13.1$/;"	h	language:markdown
0.13.0	HISTORY.md	/^# 0.13.0$/;"	h	language:markdown
0.12.0	HISTORY.md	/^# 0.12.0$/;"	h	language:markdown
0.11.1	HISTORY.md	/^# 0.11.1$/;"	h	language:markdown
0.11.0	HISTORY.md	/^# 0.11.0$/;"	h	language:markdown
0.10.3	HISTORY.md	/^# 0.10.3$/;"	h	language:markdown
0.10.2	HISTORY.md	/^# 0.10.2$/;"	h	language:markdown
0.10.1	HISTORY.md	/^# 0.10.1$/;"	h	language:markdown
0.10.0	HISTORY.md	/^# 0.10.0$/;"	h	language:markdown
0.9.2	HISTORY.md	/^# 0.9.2$/;"	h	language:markdown
0.9.1	HISTORY.md	/^# 0.9.1$/;"	h	language:markdown
0.9.0	HISTORY.md	/^# 0.9.0$/;"	h	language:markdown
0.8.0	HISTORY.md	/^# 0.8.0$/;"	h	language:markdown
0.7.0	HISTORY.md	/^# 0.7.0$/;"	h	language:markdown
0.6.0	HISTORY.md	/^# 0.6.0$/;"	h	language:markdown
0.5.1	HISTORY.md	/^# 0.5.1$/;"	h	language:markdown
0.5.0	HISTORY.md	/^# 0.5.0$/;"	h	language:markdown
0.4.0	HISTORY.md	/^# 0.4.0$/;"	h	language:markdown
0.3.0	HISTORY.md	/^# 0.3.0$/;"	h	language:markdown
0.2.0	HISTORY.md	/^# 0.2.0$/;"	h	language:markdown
0.1.3	HISTORY.md	/^# 0.1.3$/;"	h	language:markdown
Company	spec/dummy/app/models/company.rb	/^class Company < ActiveRecord::Base$/;"	c	language:Ruby
User	spec/dummy/app/models/user.rb	/^class User < ActiveRecord::Base$/;"	c	language:Ruby
ApplicationController	spec/dummy/app/controllers/application_controller.rb	/^class ApplicationController < ActionController::Base$/;"	c	language:Ruby
index	spec/dummy/app/controllers/application_controller.rb	/^  def index$/;"	f	language:Ruby	class:ApplicationController
ApplicationHelper	spec/dummy/app/helpers/application_helper.rb	/^module ApplicationHelper$/;"	m	language:Ruby
Dummy	spec/dummy/config/application.rb	/^module Dummy$/;"	m	language:Ruby
Application	spec/dummy/config/application.rb	/^  class Application < Rails::Application$/;"	c	language:Ruby	class:Dummy
APP_PATH	spec/dummy/script/rails	/^APP_PATH = File.expand_path('..\/..\/config\/application',  __FILE__)$/;"	c	language:Ruby
pages	spec/dummy/db/schema.rb	/^    t.integer  "pages"$/;"	f	language:Ruby
pages=	spec/dummy/db/schema.rb	/^    t.integer  "pages"$/;"	f	language:Ruby
published	spec/dummy/db/schema.rb	/^    t.datetime "published"$/;"	f	language:Ruby
published=	spec/dummy/db/schema.rb	/^    t.datetime "published"$/;"	f	language:Ruby
dummy	spec/dummy/db/schema.rb	/^    t.boolean "dummy"$/;"	f	language:Ruby
dummy=	spec/dummy/db/schema.rb	/^    t.boolean "dummy"$/;"	f	language:Ruby
dummy?	spec/dummy/db/schema.rb	/^    t.boolean "dummy"$/;"	f	language:Ruby
priority	spec/dummy/db/schema.rb	/^    t.integer  "priority",   :default => 0$/;"	f	language:Ruby
priority=	spec/dummy/db/schema.rb	/^    t.integer  "priority",   :default => 0$/;"	f	language:Ruby
attempts	spec/dummy/db/schema.rb	/^    t.integer  "attempts",   :default => 0$/;"	f	language:Ruby
attempts=	spec/dummy/db/schema.rb	/^    t.integer  "attempts",   :default => 0$/;"	f	language:Ruby
handler	spec/dummy/db/schema.rb	/^    t.text     "handler"$/;"	f	language:Ruby
handler=	spec/dummy/db/schema.rb	/^    t.text     "handler"$/;"	f	language:Ruby
last_error	spec/dummy/db/schema.rb	/^    t.text     "last_error"$/;"	f	language:Ruby
last_error=	spec/dummy/db/schema.rb	/^    t.text     "last_error"$/;"	f	language:Ruby
run_at	spec/dummy/db/schema.rb	/^    t.datetime "run_at"$/;"	f	language:Ruby
run_at=	spec/dummy/db/schema.rb	/^    t.datetime "run_at"$/;"	f	language:Ruby
locked_at	spec/dummy/db/schema.rb	/^    t.datetime "locked_at"$/;"	f	language:Ruby
locked_at=	spec/dummy/db/schema.rb	/^    t.datetime "locked_at"$/;"	f	language:Ruby
failed_at	spec/dummy/db/schema.rb	/^    t.datetime "failed_at"$/;"	f	language:Ruby
failed_at=	spec/dummy/db/schema.rb	/^    t.datetime "failed_at"$/;"	f	language:Ruby
created_at	spec/dummy/db/schema.rb	/^    t.datetime "created_at"$/;"	f	language:Ruby
created_at=	spec/dummy/db/schema.rb	/^    t.datetime "created_at"$/;"	f	language:Ruby
updated_at	spec/dummy/db/schema.rb	/^    t.datetime "updated_at"$/;"	f	language:Ruby
updated_at=	spec/dummy/db/schema.rb	/^    t.datetime "updated_at"$/;"	f	language:Ruby
birthdate	spec/dummy/db/schema.rb	/^    t.datetime "birthdate"$/;"	f	language:Ruby
birthdate=	spec/dummy/db/schema.rb	/^    t.datetime "birthdate"$/;"	f	language:Ruby
create_users	spec/dummy/db/seeds.rb	/^def create_users$/;"	f	language:Ruby
CreateDummyModels	spec/dummy/db/migrate/20110613152810_create_dummy_models.rb	/^class CreateDummyModels < migration_class$/;"	c	language:Ruby
up	spec/dummy/db/migrate/20110613152810_create_dummy_models.rb	/^  def self.up$/;"	F	language:Ruby	class:CreateDummyModels
dummy	spec/dummy/db/migrate/20110613152810_create_dummy_models.rb	/^      t.boolean :dummy$/;"	f	language:Ruby
dummy=	spec/dummy/db/migrate/20110613152810_create_dummy_models.rb	/^      t.boolean :dummy$/;"	f	language:Ruby
dummy?	spec/dummy/db/migrate/20110613152810_create_dummy_models.rb	/^      t.boolean :dummy$/;"	f	language:Ruby
birthdate	spec/dummy/db/migrate/20110613152810_create_dummy_models.rb	/^      t.datetime :birthdate$/;"	f	language:Ruby
birthdate=	spec/dummy/db/migrate/20110613152810_create_dummy_models.rb	/^      t.datetime :birthdate$/;"	f	language:Ruby
priority	spec/dummy/db/migrate/20110613152810_create_dummy_models.rb	/^       t.integer  :priority,   :default => 0$/;"	f	language:Ruby
priority=	spec/dummy/db/migrate/20110613152810_create_dummy_models.rb	/^       t.integer  :priority,   :default => 0$/;"	f	language:Ruby
attempts	spec/dummy/db/migrate/20110613152810_create_dummy_models.rb	/^       t.integer  :attempts,   :default => 0$/;"	f	language:Ruby
attempts=	spec/dummy/db/migrate/20110613152810_create_dummy_models.rb	/^       t.integer  :attempts,   :default => 0$/;"	f	language:Ruby
handler	spec/dummy/db/migrate/20110613152810_create_dummy_models.rb	/^       t.text     :handler$/;"	f	language:Ruby
handler=	spec/dummy/db/migrate/20110613152810_create_dummy_models.rb	/^       t.text     :handler$/;"	f	language:Ruby
last_error	spec/dummy/db/migrate/20110613152810_create_dummy_models.rb	/^       t.text     :last_error$/;"	f	language:Ruby
last_error=	spec/dummy/db/migrate/20110613152810_create_dummy_models.rb	/^       t.text     :last_error$/;"	f	language:Ruby
run_at	spec/dummy/db/migrate/20110613152810_create_dummy_models.rb	/^       t.datetime :run_at$/;"	f	language:Ruby
run_at=	spec/dummy/db/migrate/20110613152810_create_dummy_models.rb	/^       t.datetime :run_at$/;"	f	language:Ruby
locked_at	spec/dummy/db/migrate/20110613152810_create_dummy_models.rb	/^       t.datetime :locked_at$/;"	f	language:Ruby
locked_at=	spec/dummy/db/migrate/20110613152810_create_dummy_models.rb	/^       t.datetime :locked_at$/;"	f	language:Ruby
failed_at	spec/dummy/db/migrate/20110613152810_create_dummy_models.rb	/^       t.datetime :failed_at$/;"	f	language:Ruby
failed_at=	spec/dummy/db/migrate/20110613152810_create_dummy_models.rb	/^       t.datetime :failed_at$/;"	f	language:Ruby
created_at	spec/dummy/db/migrate/20110613152810_create_dummy_models.rb	/^       t.datetime :created_at$/;"	f	language:Ruby
created_at=	spec/dummy/db/migrate/20110613152810_create_dummy_models.rb	/^       t.datetime :created_at$/;"	f	language:Ruby
updated_at	spec/dummy/db/migrate/20110613152810_create_dummy_models.rb	/^       t.datetime :updated_at$/;"	f	language:Ruby
updated_at=	spec/dummy/db/migrate/20110613152810_create_dummy_models.rb	/^       t.datetime :updated_at$/;"	f	language:Ruby
down	spec/dummy/db/migrate/20110613152810_create_dummy_models.rb	/^  def self.down$/;"	F	language:Ruby	class:CreateDummyModels
CreateTableBooks	spec/dummy/db/migrate/20111202022214_create_table_books.rb	/^class CreateTableBooks < migration_class$/;"	c	language:Ruby
up	spec/dummy/db/migrate/20111202022214_create_table_books.rb	/^  def up$/;"	f	language:Ruby	class:CreateTableBooks
pages	spec/dummy/db/migrate/20111202022214_create_table_books.rb	/^      t.integer :pages$/;"	f	language:Ruby
pages=	spec/dummy/db/migrate/20111202022214_create_table_books.rb	/^      t.integer :pages$/;"	f	language:Ruby
published	spec/dummy/db/migrate/20111202022214_create_table_books.rb	/^      t.datetime :published$/;"	f	language:Ruby
published=	spec/dummy/db/migrate/20111202022214_create_table_books.rb	/^      t.datetime :published$/;"	f	language:Ruby
down	spec/dummy/db/migrate/20111202022214_create_table_books.rb	/^  def down$/;"	f	language:Ruby	class:CreateTableBooks
create_users	spec/dummy/db/seeds/import.rb	/^def create_users$/;"	f	language:Ruby
pages	spec/schemas/v3.rb	/^    t.integer  "pages"$/;"	f	language:Ruby
pages=	spec/schemas/v3.rb	/^    t.integer  "pages"$/;"	f	language:Ruby
published	spec/schemas/v3.rb	/^    t.datetime "published"$/;"	f	language:Ruby
published=	spec/schemas/v3.rb	/^    t.datetime "published"$/;"	f	language:Ruby
dummy	spec/schemas/v3.rb	/^    t.boolean "dummy"$/;"	f	language:Ruby
dummy=	spec/schemas/v3.rb	/^    t.boolean "dummy"$/;"	f	language:Ruby
dummy?	spec/schemas/v3.rb	/^    t.boolean "dummy"$/;"	f	language:Ruby
priority	spec/schemas/v3.rb	/^    t.integer  "priority",   :default => 0$/;"	f	language:Ruby
priority=	spec/schemas/v3.rb	/^    t.integer  "priority",   :default => 0$/;"	f	language:Ruby
attempts	spec/schemas/v3.rb	/^    t.integer  "attempts",   :default => 0$/;"	f	language:Ruby
attempts=	spec/schemas/v3.rb	/^    t.integer  "attempts",   :default => 0$/;"	f	language:Ruby
handler	spec/schemas/v3.rb	/^    t.text     "handler"$/;"	f	language:Ruby
handler=	spec/schemas/v3.rb	/^    t.text     "handler"$/;"	f	language:Ruby
last_error	spec/schemas/v3.rb	/^    t.text     "last_error"$/;"	f	language:Ruby
last_error=	spec/schemas/v3.rb	/^    t.text     "last_error"$/;"	f	language:Ruby
run_at	spec/schemas/v3.rb	/^    t.datetime "run_at"$/;"	f	language:Ruby
run_at=	spec/schemas/v3.rb	/^    t.datetime "run_at"$/;"	f	language:Ruby
locked_at	spec/schemas/v3.rb	/^    t.datetime "locked_at"$/;"	f	language:Ruby
locked_at=	spec/schemas/v3.rb	/^    t.datetime "locked_at"$/;"	f	language:Ruby
failed_at	spec/schemas/v3.rb	/^    t.datetime "failed_at"$/;"	f	language:Ruby
failed_at=	spec/schemas/v3.rb	/^    t.datetime "failed_at"$/;"	f	language:Ruby
created_at	spec/schemas/v3.rb	/^    t.datetime "created_at"$/;"	f	language:Ruby
created_at=	spec/schemas/v3.rb	/^    t.datetime "created_at"$/;"	f	language:Ruby
updated_at	spec/schemas/v3.rb	/^    t.datetime "updated_at"$/;"	f	language:Ruby
updated_at=	spec/schemas/v3.rb	/^    t.datetime "updated_at"$/;"	f	language:Ruby
birthdate	spec/schemas/v3.rb	/^    t.datetime "birthdate"$/;"	f	language:Ruby
birthdate=	spec/schemas/v3.rb	/^    t.datetime "birthdate"$/;"	f	language:Ruby
dummy	spec/schemas/v2.rb	/^    t.boolean "dummy"$/;"	f	language:Ruby
dummy=	spec/schemas/v2.rb	/^    t.boolean "dummy"$/;"	f	language:Ruby
dummy?	spec/schemas/v2.rb	/^    t.boolean "dummy"$/;"	f	language:Ruby
priority	spec/schemas/v2.rb	/^    t.integer  "priority",   :default => 0$/;"	f	language:Ruby
priority=	spec/schemas/v2.rb	/^    t.integer  "priority",   :default => 0$/;"	f	language:Ruby
attempts	spec/schemas/v2.rb	/^    t.integer  "attempts",   :default => 0$/;"	f	language:Ruby
attempts=	spec/schemas/v2.rb	/^    t.integer  "attempts",   :default => 0$/;"	f	language:Ruby
handler	spec/schemas/v2.rb	/^    t.text     "handler"$/;"	f	language:Ruby
handler=	spec/schemas/v2.rb	/^    t.text     "handler"$/;"	f	language:Ruby
last_error	spec/schemas/v2.rb	/^    t.text     "last_error"$/;"	f	language:Ruby
last_error=	spec/schemas/v2.rb	/^    t.text     "last_error"$/;"	f	language:Ruby
run_at	spec/schemas/v2.rb	/^    t.datetime "run_at"$/;"	f	language:Ruby
run_at=	spec/schemas/v2.rb	/^    t.datetime "run_at"$/;"	f	language:Ruby
locked_at	spec/schemas/v2.rb	/^    t.datetime "locked_at"$/;"	f	language:Ruby
locked_at=	spec/schemas/v2.rb	/^    t.datetime "locked_at"$/;"	f	language:Ruby
failed_at	spec/schemas/v2.rb	/^    t.datetime "failed_at"$/;"	f	language:Ruby
failed_at=	spec/schemas/v2.rb	/^    t.datetime "failed_at"$/;"	f	language:Ruby
created_at	spec/schemas/v2.rb	/^    t.datetime "created_at"$/;"	f	language:Ruby
created_at=	spec/schemas/v2.rb	/^    t.datetime "created_at"$/;"	f	language:Ruby
updated_at	spec/schemas/v2.rb	/^    t.datetime "updated_at"$/;"	f	language:Ruby
updated_at=	spec/schemas/v2.rb	/^    t.datetime "updated_at"$/;"	f	language:Ruby
birthdate	spec/schemas/v2.rb	/^    t.datetime "birthdate"$/;"	f	language:Ruby
birthdate=	spec/schemas/v2.rb	/^    t.datetime "birthdate"$/;"	f	language:Ruby
Apartment	spec/support/apartment_helpers.rb	/^module Apartment$/;"	m	language:Ruby
Test	spec/support/apartment_helpers.rb	/^  module Test$/;"	m	language:Ruby	class:Apartment
reset	spec/support/apartment_helpers.rb	/^    def reset$/;"	f	language:Ruby	class:Apartment.Test
next_db	spec/support/apartment_helpers.rb	/^    def next_db$/;"	f	language:Ruby	class:Apartment.Test
drop_schema	spec/support/apartment_helpers.rb	/^    def drop_schema(schema)$/;"	f	language:Ruby	class:Apartment.Test
create_schema	spec/support/apartment_helpers.rb	/^    def create_schema(schema)$/;"	f	language:Ruby	class:Apartment.Test
load_schema	spec/support/apartment_helpers.rb	/^    def load_schema(version = 3)$/;"	f	language:Ruby	class:Apartment.Test
migrate	spec/support/apartment_helpers.rb	/^    def migrate$/;"	f	language:Ruby	class:Apartment.Test
rollback	spec/support/apartment_helpers.rb	/^    def rollback$/;"	f	language:Ruby	class:Apartment.Test
RSpec	spec/support/capybara_sessions.rb	/^module RSpec$/;"	m	language:Ruby
Integration	spec/support/capybara_sessions.rb	/^  module Integration$/;"	m	language:Ruby	class:RSpec
CapybaraSessions	spec/support/capybara_sessions.rb	/^    module CapybaraSessions$/;"	m	language:Ruby	class:RSpec.Integration
in_new_session	spec/support/capybara_sessions.rb	/^      def in_new_session(&block)$/;"	f	language:Ruby	class:RSpec.Integration.CapybaraSessions
new_session	spec/support/capybara_sessions.rb	/^      def new_session$/;"	f	language:Ruby	class:RSpec.Integration.CapybaraSessions
Apartment	spec/support/requirements.rb	/^module Apartment$/;"	m	language:Ruby
Spec	spec/support/requirements.rb	/^  module Spec$/;"	m	language:Ruby	class:Apartment
AdapterRequirements	spec/support/requirements.rb	/^    module AdapterRequirements$/;"	m	language:Ruby	class:Apartment.Spec
Apartment	spec/support/setup.rb	/^module Apartment$/;"	m	language:Ruby
Spec	spec/support/setup.rb	/^  module Spec$/;"	m	language:Ruby	class:Apartment
Setup	spec/support/setup.rb	/^    module Setup$/;"	m	language:Ruby	class:Apartment.Spec
included	spec/support/setup.rb	/^      def self.included(base)$/;"	F	language:Ruby	class:Apartment.Spec.Setup
config	spec/support/setup.rb	/^            def config$/;"	f	language:Ruby	class:Apartment.Spec.Setup.included
Apartment	spec/support/config.rb	/^module Apartment$/;"	m	language:Ruby
Test	spec/support/config.rb	/^  module Test$/;"	m	language:Ruby	class:Apartment
config	spec/support/config.rb	/^    def self.config$/;"	F	language:Ruby	class:Apartment.Test
specific_connection	spec/examples/generic_adapter_custom_configuration_example.rb	/^  def specific_connection$/;"	f	language:Ruby
get_custom_db_conf	spec/examples/generic_adapter_custom_configuration_example.rb	/^  def get_custom_db_conf$/;"	f	language:Ruby
Dummy	spec/dummy_engine/test/dummy/config/application.rb	/^module Dummy$/;"	m	language:Ruby
Application	spec/dummy_engine/test/dummy/config/application.rb	/^  class Application < Rails::Application$/;"	c	language:Ruby	class:Dummy
ENGINE_ROOT	spec/dummy_engine/bin/rails	/^ENGINE_ROOT = File.expand_path('..\/..', __FILE__)$/;"	c	language:Ruby
ENGINE_PATH	spec/dummy_engine/bin/rails	/^ENGINE_PATH = File.expand_path('..\/..\/lib\/dummy_engine\/engine', __FILE__)$/;"	c	language:Ruby
APP_RAKEFILE	spec/dummy_engine/Rakefile	/^APP_RAKEFILE = File.expand_path("..\/test\/dummy\/Rakefile", __FILE__)$/;"	c	language:Ruby
default	spec/dummy_engine/Rakefile	/^task default: :test$/;"	m	language:Ruby
DummyEngine	spec/dummy_engine/lib/dummy_engine.rb	/^module DummyEngine$/;"	m	language:Ruby
DummyEngine	spec/dummy_engine/lib/dummy_engine/engine.rb	/^module DummyEngine$/;"	m	language:Ruby
Engine	spec/dummy_engine/lib/dummy_engine/engine.rb	/^  class Engine < ::Rails::Engine$/;"	c	language:Ruby	class:DummyEngine
DummyEngine	spec/dummy_engine/lib/dummy_engine/version.rb	/^module DummyEngine$/;"	m	language:Ruby
VERSION	spec/dummy_engine/lib/dummy_engine/version.rb	/^  VERSION = "0.0.1"$/;"	c	language:Ruby
Apartment TODOs	TODO.md	/^# Apartment TODOs$/;"	h	language:markdown
Below is a list of tasks in the approximate order to be completed of for Apartment	TODO.md	/^### Below is a list of tasks in the approximate order to be completed of for Apartment$/;"	k	language:markdown
Any help along the way is greatly appreciated (on any items, not particularly in order)	TODO.md	/^### Any help along the way is greatly appreciated (on any items, not particularly in order)$/;"	k	language:markdown
Apartment	README.md	/^# Apartment$/;"	h	language:markdown
HELP!	README.md	/^## HELP!$/;"	i	language:markdown
Excessive Memory Issues on ActiveRecord 4.x	README.md	/^## Excessive Memory Issues on ActiveRecord 4.x$/;"	i	language:markdown
Installation	README.md	/^## Installation$/;"	i	language:markdown
Rails	README.md	/^### Rails$/;"	k	language:markdown
Usage	README.md	/^## Usage$/;"	i	language:markdown
Video Tutorial	README.md	/^### Video Tutorial$/;"	k	language:markdown
Creating new Tenants	README.md	/^### Creating new Tenants$/;"	k	language:markdown
Switching Tenants	README.md	/^### Switching Tenants$/;"	k	language:markdown
Switching Tenants per request	README.md	/^### Switching Tenants per request$/;"	k	language:markdown
config/application.rb	README.md	/^# config\/application.rb$/;"	h	language:markdown
application.rb	README.md	/^# application.rb$/;"	h	language:markdown
config/initializers/apartment/subdomain_exclusions.rb	README.md	/^# config\/initializers\/apartment\/subdomain_exclusions.rb$/;"	h	language:markdown
application.rb	README.md	/^# application.rb$/;"	h	language:markdown
config/initializers/apartment/subdomain_exclusions.rb	README.md	/^# config\/initializers\/apartment\/subdomain_exclusions.rb$/;"	h	language:markdown
application.rb	README.md	/^# application.rb$/;"	h	language:markdown
application.rb	README.md	/^# application.rb$/;"	h	language:markdown
application.rb	README.md	/^# application.rb$/;"	h	language:markdown
application.rb	README.md	/^# application.rb$/;"	h	language:markdown
app/middleware/my_custom_elevator.rb	README.md	/^# app\/middleware\/my_custom_elevator.rb$/;"	h	language:markdown
Dropping Tenants	README.md	/^### Dropping Tenants$/;"	k	language:markdown
Config	README.md	/^## Config$/;"	i	language:markdown
Excluding models	README.md	/^### Excluding models$/;"	k	language:markdown
Postgresql Schemas	README.md	/^### Postgresql Schemas$/;"	k	language:markdown
Providing a Different default_schema	README.md	/^## Providing a Different default_schema$/;"	i	language:markdown
Persistent Schemas	README.md	/^## Persistent Schemas$/;"	i	language:markdown
Installing Extensions into Persistent Schemas	README.md	/^### Installing Extensions into Persistent Schemas$/;"	k	language:markdown
lib/tasks/db_enhancements.rake	README.md	/^# lib\/tasks\/db_enhancements.rake$/;"	h	language:markdown
This file is used to setup a shared extensions #	README.md	/^# This file is used to setup a shared extensions #$/;"	h	language:markdown
within a dedicated schema. This gives us the   #	README.md	/^# within a dedicated schema. This gives us the   #$/;"	h	language:markdown
advantage of only needing to enable extensions #	README.md	/^# advantage of only needing to enable extensions #$/;"	h	language:markdown
in one place.                                  #	README.md	/^# in one place.                                  #$/;"	h	language:markdown
#	README.md	/^#                                                #$/;"	h	language:markdown
This task should be run AFTER db:create but    #	README.md	/^# This task should be run AFTER db:create but    #$/;"	h	language:markdown
BEFORE db:migrate.                             #	README.md	/^# BEFORE db:migrate.                             #$/;"	h	language:markdown
database.yml	README.md	/^# database.yml$/;"	h	language:markdown
config/initializers/apartment.rb	README.md	/^# config\/initializers\/apartment.rb$/;"	h	language:markdown
Managing Migrations	README.md	/^### Managing Migrations$/;"	k	language:markdown
Dynamically get tenant names to migrate	README.md	/^# Dynamically get tenant names to migrate$/;"	h	language:markdown
Use a static list of tenant names for migrate	README.md	/^# Use a static list of tenant names for migrate$/;"	h	language:markdown
Handling Environments	README.md	/^### Handling Environments$/;"	k	language:markdown
Tenants on different servers	README.md	/^## Tenants on different servers$/;"	i	language:markdown
or using a lambda:	README.md	/^# or using a lambda:$/;"	h	language:markdown
Background workers	README.md	/^## Background workers$/;"	i	language:markdown
Contributing	README.md	/^## Contributing$/;"	i	language:markdown
License	README.md	/^## License$/;"	i	language:markdown
spec	Rakefile	/^namespace :spec do$/;"	f	language:Ruby
console	Rakefile	/^task :console do$/;"	m	language:Ruby
default	Rakefile	/^task :default => :spec$/;"	m	language:Ruby
db	Rakefile	/^namespace :db do$/;"	f	language:Ruby
test	Rakefile	/^  namespace :test do$/;"	f	language:Ruby
prepare	Rakefile	/^    task :prepare => %w{postgres:drop_db postgres:build_db mysql:drop_db mysql:build_db}$/;"	m	language:Ruby
copy_credentials	Rakefile	/^  task :copy_credentials do$/;"	m	language:Ruby
postgres	Rakefile	/^namespace :postgres do$/;"	f	language:Ruby
build_db	Rakefile	/^  task :build_db do$/;"	m	language:Ruby
drop_db	Rakefile	/^  task :drop_db do$/;"	m	language:Ruby
mysql	Rakefile	/^namespace :mysql do$/;"	f	language:Ruby
build_db	Rakefile	/^  task :build_db do$/;"	m	language:Ruby
drop_db	Rakefile	/^  task :drop_db do$/;"	m	language:Ruby
config	Rakefile	/^def config$/;"	f	language:Ruby
pg_config	Rakefile	/^def pg_config$/;"	f	language:Ruby
my_config	Rakefile	/^def my_config$/;"	f	language:Ruby
Steps to reproduce	.github/ISSUE_TEMPLATE.md	/^## Steps to reproduce$/;"	i	language:markdown
Expected behavior	.github/ISSUE_TEMPLATE.md	/^## Expected behavior$/;"	i	language:markdown
Actual behavior	.github/ISSUE_TEMPLATE.md	/^## Actual behavior$/;"	i	language:markdown
System configuration	.github/ISSUE_TEMPLATE.md	/^## System configuration$/;"	i	language:markdown
create	lib/tasks/apartment.rake	/^  task :create do$/;"	m	language:Ruby
TenantExists	lib/tasks/apartment.rake	/^      rescue Apartment::TenantExists => e$/;"	c	language:Ruby
drop	lib/tasks/apartment.rake	/^  task :drop do$/;"	m	language:Ruby
TenantNotFound	lib/tasks/apartment.rake	/^      rescue Apartment::TenantNotFound => e$/;"	c	language:Ruby
migrate	lib/tasks/apartment.rake	/^  task :migrate do$/;"	m	language:Ruby
TenantNotFound	lib/tasks/apartment.rake	/^      rescue Apartment::TenantNotFound => e$/;"	c	language:Ruby
seed	lib/tasks/apartment.rake	/^  task :seed do$/;"	m	language:Ruby
TenantNotFound	lib/tasks/apartment.rake	/^      rescue Apartment::TenantNotFound => e$/;"	c	language:Ruby
rollback	lib/tasks/apartment.rake	/^  task :rollback do$/;"	m	language:Ruby
TenantNotFound	lib/tasks/apartment.rake	/^      rescue Apartment::TenantNotFound => e$/;"	c	language:Ruby
migrate	lib/tasks/apartment.rake	/^  namespace :migrate do$/;"	f	language:Ruby
up	lib/tasks/apartment.rake	/^    task :up do$/;"	m	language:Ruby
TenantNotFound	lib/tasks/apartment.rake	/^        rescue Apartment::TenantNotFound => e$/;"	c	language:Ruby
down	lib/tasks/apartment.rake	/^    task :down do$/;"	m	language:Ruby
TenantNotFound	lib/tasks/apartment.rake	/^        rescue Apartment::TenantNotFound => e$/;"	c	language:Ruby
STEP	lib/tasks/apartment.rake	/^    desc  'Rolls back the tenant one migration and re migrate up (options: STEP=x, VERSION=x).'$/;"	c	language:Ruby
redo	lib/tasks/apartment.rake	/^    task :redo do$/;"	m	language:Ruby
each_tenant	lib/tasks/apartment.rake	/^  def each_tenant(&block)$/;"	f	language:Ruby
tenants	lib/tasks/apartment.rake	/^  def tenants$/;"	f	language:Ruby
warn_if_tenants_empty	lib/tasks/apartment.rake	/^  def warn_if_tenants_empty$/;"	f	language:Ruby
Apartment	lib/generators/apartment/install/install_generator.rb	/^module Apartment$/;"	m	language:Ruby
InstallGenerator	lib/generators/apartment/install/install_generator.rb	/^  class InstallGenerator < Rails::Generators::Base$/;"	c	language:Ruby	class:Apartment
copy_files	lib/generators/apartment/install/install_generator.rb	/^    def copy_files$/;"	f	language:Ruby	class:Apartment.InstallGenerator
Apartment	lib/apartment/tasks/enhancements.rb	/^module Apartment$/;"	m	language:Ruby
RakeTaskEnhancer	lib/apartment/tasks/enhancements.rb	/^  class RakeTaskEnhancer$/;"	c	language:Ruby	class:Apartment
TASKS	lib/apartment/tasks/enhancements.rb	/^    module TASKS$/;"	m	language:Ruby	class:Apartment.RakeTaskEnhancer
ENHANCE_BEFORE	lib/apartment/tasks/enhancements.rb	/^      ENHANCE_BEFORE = %w(db:drop)$/;"	c	language:Ruby
ENHANCE_AFTER	lib/apartment/tasks/enhancements.rb	/^      ENHANCE_AFTER  = %w(db:migrate db:rollback db:migrate:up db:migrate:down db:migrate:redo db:seed)$/;"	c	language:Ruby
enhance!	lib/apartment/tasks/enhancements.rb	/^      def enhance!$/;"	f	language:Ruby	class:Apartment.RakeTaskEnhancer
should_enhance?	lib/apartment/tasks/enhancements.rb	/^      def should_enhance?$/;"	f	language:Ruby	class:Apartment.RakeTaskEnhancer
enhance_before_task	lib/apartment/tasks/enhancements.rb	/^      def enhance_before_task(task)$/;"	f	language:Ruby	class:Apartment.RakeTaskEnhancer
enhance_after_task	lib/apartment/tasks/enhancements.rb	/^      def enhance_after_task(task)$/;"	f	language:Ruby	class:Apartment.RakeTaskEnhancer
inserted_task_name	lib/apartment/tasks/enhancements.rb	/^      def inserted_task_name(task)$/;"	f	language:Ruby	class:Apartment.RakeTaskEnhancer
Apartment	lib/apartment/migrator.rb	/^module Apartment$/;"	m	language:Ruby
Migrator	lib/apartment/migrator.rb	/^  module Migrator$/;"	m	language:Ruby	class:Apartment
migrate	lib/apartment/migrator.rb	/^    def migrate(database)$/;"	f	language:Ruby	class:Apartment.Migrator
run	lib/apartment/migrator.rb	/^    def run(direction, database, version)$/;"	f	language:Ruby	class:Apartment.Migrator
rollback	lib/apartment/migrator.rb	/^    def rollback(database, step = 1)$/;"	f	language:Ruby	class:Apartment.Migrator
Apartment	lib/apartment/elevators/host_hash.rb	/^module Apartment$/;"	m	language:Ruby
Elevators	lib/apartment/elevators/host_hash.rb	/^  module Elevators$/;"	m	language:Ruby	class:Apartment
HostHash	lib/apartment/elevators/host_hash.rb	/^    class HostHash < Generic$/;"	c	language:Ruby	class:Apartment.Elevators
initialize	lib/apartment/elevators/host_hash.rb	/^      def initialize(app, hash = {}, processor = nil)$/;"	f	language:Ruby	class:Apartment.Elevators.HostHash
parse_tenant_name	lib/apartment/elevators/host_hash.rb	/^      def parse_tenant_name(request)$/;"	f	language:Ruby	class:Apartment.Elevators.HostHash
Apartment	lib/apartment/elevators/subdomain.rb	/^module Apartment$/;"	m	language:Ruby
Elevators	lib/apartment/elevators/subdomain.rb	/^  module Elevators$/;"	m	language:Ruby	class:Apartment
Subdomain	lib/apartment/elevators/subdomain.rb	/^    class Subdomain < Generic$/;"	c	language:Ruby	class:Apartment.Elevators
excluded_subdomains	lib/apartment/elevators/subdomain.rb	/^      def self.excluded_subdomains$/;"	F	language:Ruby	class:Apartment.Elevators.Subdomain
excluded_subdomains	lib/apartment/elevators/subdomain.rb	/^      def self.excluded_subdomains=(arg)$/;"	F	language:Ruby	class:Apartment.Elevators.Subdomain
parse_tenant_name	lib/apartment/elevators/subdomain.rb	/^      def parse_tenant_name(request)$/;"	f	language:Ruby	class:Apartment.Elevators.Subdomain
subdomain	lib/apartment/elevators/subdomain.rb	/^      def subdomain(host)$/;"	f	language:Ruby	class:Apartment.Elevators
subdomains	lib/apartment/elevators/subdomain.rb	/^      def subdomains(host)$/;"	f	language:Ruby	class:Apartment.Elevators
host_valid?	lib/apartment/elevators/subdomain.rb	/^      def host_valid?(host)$/;"	f	language:Ruby	class:Apartment.Elevators
ip_host?	lib/apartment/elevators/subdomain.rb	/^      def ip_host?(host)$/;"	f	language:Ruby	class:Apartment.Elevators
domain_valid?	lib/apartment/elevators/subdomain.rb	/^      def domain_valid?(host)$/;"	f	language:Ruby	class:Apartment.Elevators
parse_host	lib/apartment/elevators/subdomain.rb	/^      def parse_host(host)$/;"	f	language:Ruby	class:Apartment.Elevators
Apartment	lib/apartment/elevators/host.rb	/^module Apartment$/;"	m	language:Ruby
Elevators	lib/apartment/elevators/host.rb	/^  module Elevators$/;"	m	language:Ruby	class:Apartment
Host	lib/apartment/elevators/host.rb	/^    class Host < Generic$/;"	c	language:Ruby	class:Apartment.Elevators
ignored_first_subdomains	lib/apartment/elevators/host.rb	/^      def self.ignored_first_subdomains$/;"	F	language:Ruby	class:Apartment.Elevators.Host
ignored_first_subdomains	lib/apartment/elevators/host.rb	/^      def self.ignored_first_subdomains=(arg)$/;"	F	language:Ruby	class:Apartment.Elevators.Host
parse_tenant_name	lib/apartment/elevators/host.rb	/^      def parse_tenant_name(request)$/;"	f	language:Ruby	class:Apartment.Elevators.Host
Apartment	lib/apartment/elevators/generic.rb	/^module Apartment$/;"	m	language:Ruby
Elevators	lib/apartment/elevators/generic.rb	/^  module Elevators$/;"	m	language:Ruby	class:Apartment
Generic	lib/apartment/elevators/generic.rb	/^    class Generic$/;"	c	language:Ruby	class:Apartment.Elevators
initialize	lib/apartment/elevators/generic.rb	/^      def initialize(app, processor = nil)$/;"	f	language:Ruby	class:Apartment.Elevators.Generic
call	lib/apartment/elevators/generic.rb	/^      def call(env)$/;"	f	language:Ruby	class:Apartment.Elevators.Generic
parse_tenant_name	lib/apartment/elevators/generic.rb	/^      def parse_tenant_name(request)$/;"	f	language:Ruby	class:Apartment.Elevators.Generic
Apartment	lib/apartment/elevators/domain.rb	/^module Apartment$/;"	m	language:Ruby
Elevators	lib/apartment/elevators/domain.rb	/^  module Elevators$/;"	m	language:Ruby	class:Apartment
Domain	lib/apartment/elevators/domain.rb	/^    class Domain < Generic$/;"	c	language:Ruby	class:Apartment.Elevators
parse_tenant_name	lib/apartment/elevators/domain.rb	/^      def parse_tenant_name(request)$/;"	f	language:Ruby	class:Apartment.Elevators.Domain
Apartment	lib/apartment/elevators/first_subdomain.rb	/^module Apartment$/;"	m	language:Ruby
Elevators	lib/apartment/elevators/first_subdomain.rb	/^  module Elevators$/;"	m	language:Ruby	class:Apartment
FirstSubdomain	lib/apartment/elevators/first_subdomain.rb	/^    class FirstSubdomain < Subdomain$/;"	c	language:Ruby	class:Apartment.Elevators
parse_tenant_name	lib/apartment/elevators/first_subdomain.rb	/^      def parse_tenant_name(request)$/;"	f	language:Ruby	class:Apartment.Elevators.FirstSubdomain
Apartment	lib/apartment/adapters/sqlite3_adapter.rb	/^module Apartment$/;"	m	language:Ruby
Tenant	lib/apartment/adapters/sqlite3_adapter.rb	/^  module Tenant$/;"	m	language:Ruby	class:Apartment
sqlite3_adapter	lib/apartment/adapters/sqlite3_adapter.rb	/^    def self.sqlite3_adapter(config)$/;"	F	language:Ruby	class:Apartment.Tenant
Adapters	lib/apartment/adapters/sqlite3_adapter.rb	/^  module Adapters$/;"	m	language:Ruby	class:Apartment
Sqlite3Adapter	lib/apartment/adapters/sqlite3_adapter.rb	/^    class Sqlite3Adapter < AbstractAdapter$/;"	c	language:Ruby	class:Apartment.Adapters
initialize	lib/apartment/adapters/sqlite3_adapter.rb	/^      def initialize(config)$/;"	f	language:Ruby	class:Apartment.Adapters.Sqlite3Adapter
drop	lib/apartment/adapters/sqlite3_adapter.rb	/^      def drop(tenant)$/;"	f	language:Ruby	class:Apartment.Adapters.Sqlite3Adapter
current	lib/apartment/adapters/sqlite3_adapter.rb	/^      def current$/;"	f	language:Ruby	class:Apartment.Adapters.Sqlite3Adapter
connect_to_new	lib/apartment/adapters/sqlite3_adapter.rb	/^      def connect_to_new(tenant)$/;"	f	language:Ruby	class:Apartment.Adapters.Sqlite3Adapter
create_tenant	lib/apartment/adapters/sqlite3_adapter.rb	/^      def create_tenant(tenant)$/;"	f	language:Ruby	class:Apartment.Adapters.Sqlite3Adapter
database_file	lib/apartment/adapters/sqlite3_adapter.rb	/^      def database_file(tenant)$/;"	f	language:Ruby	class:Apartment.Adapters.Sqlite3Adapter
Apartment	lib/apartment/adapters/postgis_adapter.rb	/^module Apartment$/;"	m	language:Ruby
Tenant	lib/apartment/adapters/postgis_adapter.rb	/^  module Tenant$/;"	m	language:Ruby	class:Apartment
postgis_adapter	lib/apartment/adapters/postgis_adapter.rb	/^    def self.postgis_adapter(config)$/;"	F	language:Ruby	class:Apartment.Tenant
Apartment	lib/apartment/adapters/abstract_jdbc_adapter.rb	/^module Apartment$/;"	m	language:Ruby
Adapters	lib/apartment/adapters/abstract_jdbc_adapter.rb	/^  module Adapters$/;"	m	language:Ruby	class:Apartment
AbstractJDBCAdapter	lib/apartment/adapters/abstract_jdbc_adapter.rb	/^    class AbstractJDBCAdapter < AbstractAdapter$/;"	c	language:Ruby	class:Apartment.Adapters
multi_tenantify_with_tenant_db_name	lib/apartment/adapters/abstract_jdbc_adapter.rb	/^      def multi_tenantify_with_tenant_db_name(config, tenant)$/;"	f	language:Ruby	class:Apartment.Adapters.AbstractJDBCAdapter
rescue_from	lib/apartment/adapters/abstract_jdbc_adapter.rb	/^      def rescue_from$/;"	f	language:Ruby	class:Apartment.Adapters.AbstractJDBCAdapter
Apartment	lib/apartment/adapters/mysql2_adapter.rb	/^module Apartment$/;"	m	language:Ruby
Tenant	lib/apartment/adapters/mysql2_adapter.rb	/^  module Tenant$/;"	m	language:Ruby	class:Apartment
mysql2_adapter	lib/apartment/adapters/mysql2_adapter.rb	/^    def self.mysql2_adapter(config)$/;"	F	language:Ruby	class:Apartment.Tenant
Adapters	lib/apartment/adapters/mysql2_adapter.rb	/^  module Adapters$/;"	m	language:Ruby	class:Apartment
Mysql2Adapter	lib/apartment/adapters/mysql2_adapter.rb	/^    class Mysql2Adapter < AbstractAdapter$/;"	c	language:Ruby	class:Apartment.Adapters
initialize	lib/apartment/adapters/mysql2_adapter.rb	/^      def initialize(config)$/;"	f	language:Ruby	class:Apartment.Adapters.Mysql2Adapter
rescue_from	lib/apartment/adapters/mysql2_adapter.rb	/^      def rescue_from$/;"	f	language:Ruby	class:Apartment.Adapters.Mysql2Adapter
Mysql2SchemaAdapter	lib/apartment/adapters/mysql2_adapter.rb	/^    class Mysql2SchemaAdapter < AbstractAdapter$/;"	c	language:Ruby	class:Apartment.Adapters
initialize	lib/apartment/adapters/mysql2_adapter.rb	/^      def initialize(config)$/;"	f	language:Ruby	class:Apartment.Adapters.Mysql2SchemaAdapter
reset	lib/apartment/adapters/mysql2_adapter.rb	/^      def reset$/;"	f	language:Ruby	class:Apartment.Adapters.Mysql2SchemaAdapter
connect_to_new	lib/apartment/adapters/mysql2_adapter.rb	/^      def connect_to_new(tenant)$/;"	f	language:Ruby	class:Apartment.Adapters.Mysql2SchemaAdapter
StatementInvalid	lib/apartment/adapters/mysql2_adapter.rb	/^      rescue ActiveRecord::StatementInvalid => exception$/;"	c	language:Ruby
process_excluded_model	lib/apartment/adapters/mysql2_adapter.rb	/^      def process_excluded_model(model)$/;"	f	language:Ruby	class:Apartment.Adapters.Mysql2SchemaAdapter
reset_on_connection_exception?	lib/apartment/adapters/mysql2_adapter.rb	/^      def reset_on_connection_exception?$/;"	f	language:Ruby	class:Apartment.Adapters.Mysql2SchemaAdapter
Apartment	lib/apartment/adapters/jdbc_mysql_adapter.rb	/^module Apartment$/;"	m	language:Ruby
Tenant	lib/apartment/adapters/jdbc_mysql_adapter.rb	/^  module Tenant$/;"	m	language:Ruby	class:Apartment
jdbc_mysql_adapter	lib/apartment/adapters/jdbc_mysql_adapter.rb	/^    def self.jdbc_mysql_adapter(config)$/;"	F	language:Ruby	class:Apartment.Tenant
Adapters	lib/apartment/adapters/jdbc_mysql_adapter.rb	/^  module Adapters$/;"	m	language:Ruby	class:Apartment
JDBCMysqlAdapter	lib/apartment/adapters/jdbc_mysql_adapter.rb	/^    class JDBCMysqlAdapter < AbstractJDBCAdapter$/;"	c	language:Ruby	class:Apartment.Adapters
reset_on_connection_exception?	lib/apartment/adapters/jdbc_mysql_adapter.rb	/^      def reset_on_connection_exception?$/;"	f	language:Ruby	class:Apartment.Adapters.JDBCMysqlAdapter
Apartment	lib/apartment/adapters/jdbc_postgresql_adapter.rb	/^module Apartment$/;"	m	language:Ruby
Tenant	lib/apartment/adapters/jdbc_postgresql_adapter.rb	/^  module Tenant$/;"	m	language:Ruby	class:Apartment
jdbc_postgresql_adapter	lib/apartment/adapters/jdbc_postgresql_adapter.rb	/^    def self.jdbc_postgresql_adapter(config)$/;"	F	language:Ruby	class:Apartment.Tenant
Adapters	lib/apartment/adapters/jdbc_postgresql_adapter.rb	/^  module Adapters$/;"	m	language:Ruby	class:Apartment
JDBCPostgresqlAdapter	lib/apartment/adapters/jdbc_postgresql_adapter.rb	/^    class JDBCPostgresqlAdapter < PostgresqlAdapter$/;"	c	language:Ruby	class:Apartment.Adapters
multi_tenantify_with_tenant_db_name	lib/apartment/adapters/jdbc_postgresql_adapter.rb	/^      def multi_tenantify_with_tenant_db_name(config, tenant)$/;"	f	language:Ruby	class:Apartment.Adapters.JDBCPostgresqlAdapter
create_tenant_command	lib/apartment/adapters/jdbc_postgresql_adapter.rb	/^      def create_tenant_command(conn, tenant)$/;"	f	language:Ruby	class:Apartment.Adapters.JDBCPostgresqlAdapter
rescue_from	lib/apartment/adapters/jdbc_postgresql_adapter.rb	/^      def rescue_from$/;"	f	language:Ruby	class:Apartment.Adapters.JDBCPostgresqlAdapter
JDBCPostgresqlSchemaAdapter	lib/apartment/adapters/jdbc_postgresql_adapter.rb	/^    class JDBCPostgresqlSchemaAdapter < PostgresqlSchemaAdapter$/;"	c	language:Ruby	class:Apartment.Adapters
connect_to_new	lib/apartment/adapters/jdbc_postgresql_adapter.rb	/^      def connect_to_new(tenant = nil)$/;"	f	language:Ruby	class:Apartment.Adapters.JDBCPostgresqlSchemaAdapter
rescue_from	lib/apartment/adapters/jdbc_postgresql_adapter.rb	/^      def rescue_from$/;"	f	language:Ruby	class:Apartment.Adapters.JDBCPostgresqlSchemaAdapter
Apartment	lib/apartment/adapters/postgresql_adapter.rb	/^module Apartment$/;"	m	language:Ruby
Tenant	lib/apartment/adapters/postgresql_adapter.rb	/^  module Tenant$/;"	m	language:Ruby	class:Apartment
postgresql_adapter	lib/apartment/adapters/postgresql_adapter.rb	/^    def self.postgresql_adapter(config)$/;"	F	language:Ruby	class:Apartment.Tenant
Adapters	lib/apartment/adapters/postgresql_adapter.rb	/^  module Adapters$/;"	m	language:Ruby	class:Apartment
PostgresqlAdapter	lib/apartment/adapters/postgresql_adapter.rb	/^    class PostgresqlAdapter < AbstractAdapter$/;"	c	language:Ruby	class:Apartment.Adapters
rescue_from	lib/apartment/adapters/postgresql_adapter.rb	/^      def rescue_from$/;"	f	language:Ruby	class:Apartment.Adapters.PostgresqlAdapter
PostgresqlSchemaAdapter	lib/apartment/adapters/postgresql_adapter.rb	/^    class PostgresqlSchemaAdapter < AbstractAdapter$/;"	c	language:Ruby	class:Apartment.Adapters
initialize	lib/apartment/adapters/postgresql_adapter.rb	/^      def initialize(config)$/;"	f	language:Ruby	class:Apartment.Adapters.PostgresqlSchemaAdapter
reset	lib/apartment/adapters/postgresql_adapter.rb	/^      def reset$/;"	f	language:Ruby	class:Apartment.Adapters.PostgresqlSchemaAdapter
current	lib/apartment/adapters/postgresql_adapter.rb	/^      def current$/;"	f	language:Ruby	class:Apartment.Adapters.PostgresqlSchemaAdapter
process_excluded_model	lib/apartment/adapters/postgresql_adapter.rb	/^      def process_excluded_model(excluded_model)$/;"	f	language:Ruby	class:Apartment.Adapters.PostgresqlSchemaAdapter
drop_command	lib/apartment/adapters/postgresql_adapter.rb	/^      def drop_command(conn, tenant)$/;"	f	language:Ruby	class:Apartment.Adapters.PostgresqlSchemaAdapter
connect_to_new	lib/apartment/adapters/postgresql_adapter.rb	/^      def connect_to_new(tenant = nil)$/;"	f	language:Ruby	class:Apartment.Adapters.PostgresqlSchemaAdapter
create_tenant_command	lib/apartment/adapters/postgresql_adapter.rb	/^      def create_tenant_command(conn, tenant)$/;"	f	language:Ruby	class:Apartment.Adapters.PostgresqlSchemaAdapter
full_search_path	lib/apartment/adapters/postgresql_adapter.rb	/^      def full_search_path$/;"	f	language:Ruby	class:Apartment.Adapters.PostgresqlSchemaAdapter
persistent_schemas	lib/apartment/adapters/postgresql_adapter.rb	/^      def persistent_schemas$/;"	f	language:Ruby	class:Apartment.Adapters.PostgresqlSchemaAdapter
postgresql_version	lib/apartment/adapters/postgresql_adapter.rb	/^      def postgresql_version$/;"	f	language:Ruby	class:Apartment.Adapters.PostgresqlSchemaAdapter
PostgresqlSchemaFromSqlAdapter	lib/apartment/adapters/postgresql_adapter.rb	/^    class PostgresqlSchemaFromSqlAdapter < PostgresqlSchemaAdapter$/;"	c	language:Ruby	class:Apartment.Adapters
PSQL_DUMP_BLACKLISTED_STATEMENTS	lib/apartment/adapters/postgresql_adapter.rb	/^      PSQL_DUMP_BLACKLISTED_STATEMENTS= [$/;"	c	language:Ruby
import_database_schema	lib/apartment/adapters/postgresql_adapter.rb	/^      def import_database_schema$/;"	f	language:Ruby	class:Apartment.Adapters.PostgresqlSchemaFromSqlAdapter
clone_pg_schema	lib/apartment/adapters/postgresql_adapter.rb	/^      def clone_pg_schema$/;"	f	language:Ruby	class:Apartment.Adapters.PostgresqlSchemaFromSqlAdapter
copy_schema_migrations	lib/apartment/adapters/postgresql_adapter.rb	/^      def copy_schema_migrations$/;"	f	language:Ruby	class:Apartment.Adapters.PostgresqlSchemaFromSqlAdapter
pg_dump_schema	lib/apartment/adapters/postgresql_adapter.rb	/^      def pg_dump_schema$/;"	f	language:Ruby	class:Apartment.Adapters.PostgresqlSchemaFromSqlAdapter
pg_dump_schema_migrations_data	lib/apartment/adapters/postgresql_adapter.rb	/^      def pg_dump_schema_migrations_data$/;"	f	language:Ruby	class:Apartment.Adapters.PostgresqlSchemaFromSqlAdapter
with_pg_env	lib/apartment/adapters/postgresql_adapter.rb	/^      def with_pg_env(&block)$/;"	f	language:Ruby	class:Apartment.Adapters.PostgresqlSchemaFromSqlAdapter
patch_search_path	lib/apartment/adapters/postgresql_adapter.rb	/^      def patch_search_path(sql)$/;"	f	language:Ruby	class:Apartment.Adapters.PostgresqlSchemaFromSqlAdapter
check_input_against_regexps	lib/apartment/adapters/postgresql_adapter.rb	/^      def check_input_against_regexps(input, regexps)$/;"	f	language:Ruby	class:Apartment.Adapters.PostgresqlSchemaFromSqlAdapter
collect_table_names	lib/apartment/adapters/postgresql_adapter.rb	/^      def collect_table_names(models)$/;"	f	language:Ruby	class:Apartment.Adapters.PostgresqlSchemaFromSqlAdapter
dbname	lib/apartment/adapters/postgresql_adapter.rb	/^      def dbname$/;"	f	language:Ruby	class:Apartment.Adapters.PostgresqlSchemaFromSqlAdapter
Apartment	lib/apartment/adapters/abstract_adapter.rb	/^module Apartment$/;"	m	language:Ruby
Adapters	lib/apartment/adapters/abstract_adapter.rb	/^  module Adapters$/;"	m	language:Ruby	class:Apartment
AbstractAdapter	lib/apartment/adapters/abstract_adapter.rb	/^    class AbstractAdapter$/;"	c	language:Ruby	class:Apartment.Adapters
initialize	lib/apartment/adapters/abstract_adapter.rb	/^      def initialize(config)$/;"	f	language:Ruby	class:Apartment.Adapters.AbstractAdapter
create	lib/apartment/adapters/abstract_adapter.rb	/^      def create(tenant)$/;"	f	language:Ruby	class:Apartment.Adapters.AbstractAdapter
current	lib/apartment/adapters/abstract_adapter.rb	/^      def current$/;"	f	language:Ruby	class:Apartment.Adapters.AbstractAdapter
default_tenant	lib/apartment/adapters/abstract_adapter.rb	/^      def default_tenant$/;"	f	language:Ruby	class:Apartment.Adapters.AbstractAdapter
drop	lib/apartment/adapters/abstract_adapter.rb	/^      def drop(tenant)$/;"	f	language:Ruby	class:Apartment.Adapters.AbstractAdapter
switch!	lib/apartment/adapters/abstract_adapter.rb	/^      def switch!(tenant = nil)$/;"	f	language:Ruby	class:Apartment.Adapters.AbstractAdapter
switch	lib/apartment/adapters/abstract_adapter.rb	/^      def switch(tenant = nil)$/;"	f	language:Ruby	class:Apartment.Adapters.AbstractAdapter
each	lib/apartment/adapters/abstract_adapter.rb	/^      def each(tenants = Apartment.tenant_names)$/;"	f	language:Ruby	class:Apartment.Adapters.AbstractAdapter
process_excluded_models	lib/apartment/adapters/abstract_adapter.rb	/^      def process_excluded_models$/;"	f	language:Ruby	class:Apartment.Adapters.AbstractAdapter
reset	lib/apartment/adapters/abstract_adapter.rb	/^      def reset$/;"	f	language:Ruby	class:Apartment.Adapters.AbstractAdapter
seed_data	lib/apartment/adapters/abstract_adapter.rb	/^      def seed_data$/;"	f	language:Ruby	class:Apartment.Adapters.AbstractAdapter
seed	lib/apartment/adapters/abstract_adapter.rb	/^      alias_method :seed, :seed_data$/;"	m	language:Ruby
process_excluded_model	lib/apartment/adapters/abstract_adapter.rb	/^      def process_excluded_model(excluded_model)$/;"	f	language:Ruby	class:Apartment.Adapters.AbstractAdapter
drop_command	lib/apartment/adapters/abstract_adapter.rb	/^      def drop_command(conn, tenant)$/;"	f	language:Ruby	class:Apartment.Adapters.AbstractAdapter
create_tenant	lib/apartment/adapters/abstract_adapter.rb	/^      def create_tenant(tenant)$/;"	f	language:Ruby	class:Apartment.Adapters.AbstractAdapter
create_tenant_command	lib/apartment/adapters/abstract_adapter.rb	/^      def create_tenant_command(conn, tenant)$/;"	f	language:Ruby	class:Apartment.Adapters.AbstractAdapter
connect_to_new	lib/apartment/adapters/abstract_adapter.rb	/^      def connect_to_new(tenant)$/;"	f	language:Ruby	class:Apartment.Adapters.AbstractAdapter
environmentify	lib/apartment/adapters/abstract_adapter.rb	/^      def environmentify(tenant)$/;"	f	language:Ruby	class:Apartment.Adapters.AbstractAdapter
import_database_schema	lib/apartment/adapters/abstract_adapter.rb	/^      def import_database_schema$/;"	f	language:Ruby	class:Apartment.Adapters.AbstractAdapter
multi_tenantify	lib/apartment/adapters/abstract_adapter.rb	/^      def multi_tenantify(tenant, with_database = true)$/;"	f	language:Ruby	class:Apartment.Adapters.AbstractAdapter
multi_tenantify_with_tenant_db_name	lib/apartment/adapters/abstract_adapter.rb	/^      def multi_tenantify_with_tenant_db_name(config, tenant)$/;"	f	language:Ruby	class:Apartment.Adapters.AbstractAdapter
load_or_raise	lib/apartment/adapters/abstract_adapter.rb	/^      def load_or_raise(file)$/;"	f	language:Ruby	class:Apartment.Adapters.AbstractAdapter
load_or_abort	lib/apartment/adapters/abstract_adapter.rb	/^      alias_method :load_or_abort, :load_or_raise$/;"	m	language:Ruby
rescuable_exceptions	lib/apartment/adapters/abstract_adapter.rb	/^      def rescuable_exceptions$/;"	f	language:Ruby	class:Apartment.Adapters.AbstractAdapter
rescue_from	lib/apartment/adapters/abstract_adapter.rb	/^      def rescue_from$/;"	f	language:Ruby	class:Apartment.Adapters.AbstractAdapter
db_connection_config	lib/apartment/adapters/abstract_adapter.rb	/^      def db_connection_config(tenant)$/;"	f	language:Ruby	class:Apartment.Adapters.AbstractAdapter
with_neutral_connection	lib/apartment/adapters/abstract_adapter.rb	/^     def with_neutral_connection(tenant, &block)$/;"	f	language:Ruby	class:Apartment.Adapters.AbstractAdapter
reset_on_connection_exception?	lib/apartment/adapters/abstract_adapter.rb	/^      def reset_on_connection_exception?$/;"	f	language:Ruby	class:Apartment.Adapters.AbstractAdapter
raise_drop_tenant_error!	lib/apartment/adapters/abstract_adapter.rb	/^      def raise_drop_tenant_error!(tenant, exception)$/;"	f	language:Ruby	class:Apartment.Adapters.AbstractAdapter
raise_create_tenant_error!	lib/apartment/adapters/abstract_adapter.rb	/^      def raise_create_tenant_error!(tenant, exception)$/;"	f	language:Ruby	class:Apartment.Adapters.AbstractAdapter
raise_connect_error!	lib/apartment/adapters/abstract_adapter.rb	/^      def raise_connect_error!(tenant, exception)$/;"	f	language:Ruby	class:Apartment.Adapters.AbstractAdapter
SeparateDbConnectionHandler	lib/apartment/adapters/abstract_adapter.rb	/^      class SeparateDbConnectionHandler < ::ActiveRecord::Base$/;"	c	language:Ruby	class:Apartment.Adapters.AbstractAdapter
Apartment	lib/apartment/railtie.rb	/^module Apartment$/;"	m	language:Ruby
Railtie	lib/apartment/railtie.rb	/^  class Railtie < Rails::Railtie$/;"	c	language:Ruby	class:Apartment
Apartment	lib/apartment/deprecation.rb	/^module Apartment$/;"	m	language:Ruby
Deprecation	lib/apartment/deprecation.rb	/^  module Deprecation$/;"	m	language:Ruby	class:Apartment
warn	lib/apartment/deprecation.rb	/^    def self.warn(message)$/;"	F	language:Ruby	class:Apartment.Deprecation
Apartment	lib/apartment/version.rb	/^module Apartment$/;"	m	language:Ruby
VERSION	lib/apartment/version.rb	/^  VERSION = "2.1.0"$/;"	c	language:Ruby
Apartment	lib/apartment/reloader.rb	/^module Apartment$/;"	m	language:Ruby
Reloader	lib/apartment/reloader.rb	/^  class Reloader$/;"	c	language:Ruby	class:Apartment
initialize	lib/apartment/reloader.rb	/^    def initialize(app)$/;"	f	language:Ruby	class:Apartment.Reloader
call	lib/apartment/reloader.rb	/^    def call(env)$/;"	f	language:Ruby	class:Apartment.Reloader
reload!	lib/apartment/console.rb	/^def reload!(print=true)$/;"	f	language:Ruby
Apartment	lib/apartment.rb	/^module Apartment$/;"	m	language:Ruby
ACCESSOR_METHODS	lib/apartment.rb	/^    ACCESSOR_METHODS  = [:use_schemas, :use_sql, :seed_after_create, :prepend_environment, :append_environment, :with_multi_server_setup ]$/;"	c	language:Ruby
WRITER_METHODS	lib/apartment.rb	/^    WRITER_METHODS    = [:tenant_names, :database_schema_file, :excluded_models, :default_schema, :persistent_schemas, :connection_class, :tld_length, :db_migrate_tenants, :seed_data_file, :parallel_migration_threads]$/;"	c	language:Ruby
configure	lib/apartment.rb	/^    def configure$/;"	f	language:Ruby	class:Apartment
tenant_names	lib/apartment.rb	/^    def tenant_names$/;"	f	language:Ruby	class:Apartment
tenants_with_config	lib/apartment.rb	/^    def tenants_with_config$/;"	f	language:Ruby	class:Apartment
db_config_for	lib/apartment.rb	/^    def db_config_for(tenant)$/;"	f	language:Ruby	class:Apartment
db_migrate_tenants	lib/apartment.rb	/^    def db_migrate_tenants$/;"	f	language:Ruby	class:Apartment
excluded_models	lib/apartment.rb	/^    def excluded_models$/;"	f	language:Ruby	class:Apartment
default_schema	lib/apartment.rb	/^    def default_schema$/;"	f	language:Ruby	class:Apartment
parallel_migration_threads	lib/apartment.rb	/^    def parallel_migration_threads$/;"	f	language:Ruby	class:Apartment
persistent_schemas	lib/apartment.rb	/^    def persistent_schemas$/;"	f	language:Ruby	class:Apartment
connection_class	lib/apartment.rb	/^    def connection_class$/;"	f	language:Ruby	class:Apartment
database_schema_file	lib/apartment.rb	/^    def database_schema_file$/;"	f	language:Ruby	class:Apartment
seed_data_file	lib/apartment.rb	/^    def seed_data_file$/;"	f	language:Ruby	class:Apartment
reset	lib/apartment.rb	/^    def reset$/;"	f	language:Ruby	class:Apartment
extract_tenant_config	lib/apartment.rb	/^    def extract_tenant_config$/;"	f	language:Ruby	class:Apartment
ApartmentError	lib/apartment.rb	/^  ApartmentError = Class.new(StandardError)$/;"	c	language:Ruby
AdapterNotFound	lib/apartment.rb	/^  AdapterNotFound = Class.new(ApartmentError)$/;"	c	language:Ruby
FileNotFound	lib/apartment.rb	/^  FileNotFound = Class.new(ApartmentError)$/;"	c	language:Ruby
TenantNotFound	lib/apartment.rb	/^  TenantNotFound = Class.new(ApartmentError)$/;"	c	language:Ruby
TenantExists	lib/apartment.rb	/^  TenantExists = Class.new(ApartmentError)$/;"	c	language:Ruby
Apartment	lib/apartment/tenant.rb	/^module Apartment$/;"	m	language:Ruby
Tenant	lib/apartment/tenant.rb	/^  module Tenant$/;"	m	language:Ruby	class:Apartment
init	lib/apartment/tenant.rb	/^    def init$/;"	f	language:Ruby	class:Apartment.Tenant
adapter	lib/apartment/tenant.rb	/^    def adapter$/;"	f	language:Ruby	class:Apartment.Tenant
reload!	lib/apartment/tenant.rb	/^    def reload!(config = nil)$/;"	f	language:Ruby	class:Apartment.Tenant
config	lib/apartment/tenant.rb	/^    def config$/;"	f	language:Ruby	class:Apartment.Tenant
